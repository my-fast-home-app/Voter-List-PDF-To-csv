trigger:
  - main

variables:
  dockerfilePath: 'Dockerfile'
  imageName: 'voter-pdf-to-csv:$(Build.BuildId)'
  containerRegistry: 'your-acr-name.azurecr.io'

stages:
  - stage: Build
    displayName: Build and push Docker image
    jobs:
    - job: Build
      displayName: Build Docker image
      pool:
        vmImage: 'ubuntu-latest'
      
      steps:
      - task: DockerInstaller@0
        displayName: 'Install Docker'
        
      - task: Docker@2
        displayName: 'Build Docker image'
        inputs:
          command: 'build'
          dockerfile: '$(dockerfilePath)'
          tags: '$(imageName)'
          
      - task: Docker@2
        displayName: 'Push Docker image to ACR'
        inputs:
          command: 'push'
          repository: '$(containerRegistry)/$(imageName)'
          tags: '$(imageName)'
        condition: succeeded()

  - stage: Deploy
    displayName: Deploy to Azure Web App
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: Deploy
      displayName: Deploy to Azure Web App
      environment: 'production'
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureWebAppContainer@1
              displayName: 'Deploy to Azure Web App'
              inputs:
                azureSubscription: 'Your-Azure-Subscription'
                appName: 'voter-pdf-to-csv-app'
                containers: '$(containerRegistry)/$(imageName)'
                appSettings: '-WEBSITES_PORT 5000'
